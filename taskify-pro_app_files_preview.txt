==> taskify-pro/app/utils.py <==
# Utility functions can be added here as needed
def validate_task_data(data):
    """Validate incoming task data"""
    errors = []
    if not data.get("title"):
        errors.append("Title is required")

    if "status" in data and data["status"] not in [
        "pending",
        "in_progress",

==> taskify-pro/app/routes.py <==
from flask import Blueprint, jsonify, request
from app.models import Task
from app import db
from datetime import datetime

main_bp = Blueprint("main", __name__)


@main_bp.route("/health", methods=["GET"])
def health_check():

==> taskify-pro/app/__init__.py <==
from flask import Flask
from flask_sqlalchemy import SQLAlchemy
import os

db = SQLAlchemy()


def create_app(config_name=None):
    app = Flask(__name__)


==> taskify-pro/app/config.py <==
import os


class Config:
    SECRET_KEY = os.environ.get("SECRET_KEY", "dev-key-for-development")
    SQLALCHEMY_TRACK_MODIFICATIONS = False


class DevelopmentConfig(Config):
    DEBUG = True

==> taskify-pro/app/models.py <==
from app import db
from datetime import datetime


class Task(db.Model):
    __tablename__ = "tasks"

    id = db.Column(db.Integer, primary_key=True)
    title = db.Column(db.String(100), nullable=False)
    description = db.Column(db.Text)

==> taskify-pro/app/templates/index.html <==
{% extends "layout.html" %}

{% block content %}
<div class="card p-3 mb-3">
    <form id="taskForm">
        <div class="row g-2">
            <div class="col-md-4">
                <input type="text" class="form-control" placeholder="Title" name="title" required>
            </div>
            <div class="col-md-5">

==> taskify-pro/app/templates/layout.html <==
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Taskify</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="{{ url_for('static', filename='css/style.css') }}" rel="stylesheet">
</head>
<body class="bg-light">
    <div class="container mt-4">

==> taskify-pro/app/static/css/style.css <==
body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

==> taskify-pro/app/static/js/main.js <==
document.addEventListener('DOMContentLoaded', loadTasks);

function loadTasks() {
    fetch('/tasks')
        .then(res => res.json())
        .then(data => {
            const list = document.getElementById('taskList');
            list.innerHTML = '';
            data.tasks.forEach(task => {
                const li = document.createElement('li');

